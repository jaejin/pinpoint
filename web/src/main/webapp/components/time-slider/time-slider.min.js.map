{"version":3,"sources":["time-slider.js","time-slider.event-data.js","time-slider.background.js","time-slider.selection-manager.js","time-slider.position-manager.js","time-slider.selection-zone.js","time-slider.x-axis.js","time-slider.state-line.js","time-slider.handler.js","time-slider.selection-point.js","time-slider.events.js","time-slider.time-series-signboard.js","time-slider.time-signboard.js","time-slider.loading-indicator.js"],"names":["w","$","TimeSlider","id","options","this","$snap","snap","Snap","_init","_initControlClass","_addInnerEventListener","prototype","groups","_aListener","inEvent","outEvent","clickEvent","selectTime","changeSliderTimeSeries","changeSelectionZone","opt","duration","xAxisTicks","eventZoneHeight","headerZoneHeight","stateLineThickness","minSliderTimeSeries","maxSelectionTimeSeries","headerTextTopPadding","selectionPointRadius","p","oEventData","EventData","eventData","_checkOffset","oPositionManager","PositionManager","width","handleTimeSeries","sliderTimeSeries","timeSeries","contentZoneHeight","height","oLoading","LoadingIndicator","getGroup","GROUP_TYPE","TOP_BASE","oDrawOrder","oBackground","Background","CONTENT_BASE","top","left","oSelectionManager","SelectionManager","margin","handleSrc","oXAxis","XAxis","endY","textY","startY","oStateLine","StateLine","topLineY","thickness","bottomLineY","oEvents","Events","BOTTOM_BASE","hide","name","type","zIndex","g","attr","class","data-order","_setTransform","_sortGroup","newGroup","transform","aGroups","selectAll","afterGroup","i","length","parseInt","before","o","offset","self","mousedownX","window","on","_resize","mousemove","event","x","y","mouseout","mousedown","click","onMouseClick","fireEvent","eventType","argu","forEach","fn","addEvent","listener","push","addEventData","aNewData","show","addData","changeData","reset","setWidth","zoomIn","zoomLevel","zoomOut","getSliderTimeSeries","getSelectionTimeSeries","setDefaultStateLineColor","color","emptyData","setSelectTime","time","background","selection-zone","time-series-signboard","x-axis","events","time-signboard","selection-point","state-line","left-handler","right-handler","guide","loading","EventColor","base","10100","10199","10200","10201","10300","10301","20100","jQuery","ts","aRawData","_aRawData","_oHash","makeID","oEvent","eventTypeCode","eventTimestamp","count","getDataByIndex","index","getDataByKey","key","j","beforeBoundary","_getBeforeDataBoundary","unshift","afterBoundary","_getAfterDataBoundary","Number","MAX_SAFE_INTEGER","skip","rawTimestamp","oNewEventData","splice","boundary","startTime","len","skipIndex","startIndex","endTime","timeSlider","svgGroup","group","_addElements","rect","add","animate","getSliderEndPosition","mina","easein","initClass","aHandlerPosition","getSelectionPosition","oSelectionZone","SelectionZone","oSelectionPoint","SelectionPoint","getSelectPosition","radius","eventStartY","eventEndY","oLeftHandler","Handler","zone","oLeftTimeSignboard","onDragStart","onDrag","bIsDraged","onDragEnd","moveLeftHandler","oRightHandler","oRightTimeSignboard","moveRightHandler","TimeSignboard","direction","aCurrentSelectionTimeSeries","newLeftTime","getTimeFromPosition","isInMaxSelectionTimeSeries","setZone","setSelectionStartPosition","aNewSelectionTimeSeries","getNewSelectionTimeSeriesFromStart","newRightX","getPositionFromTime","setX","setSelectionEndPosition","isInSelectionZoneSelectPoint","redraw","_fireChangeZoneEvent","newRightTime","getNewSelectionTimeSeriesFromEnd","newLeftX","moveSelectionAndHandler","aNewSelectionZone","setPositionAndZone","_setSelectTime","isInSliderTimeSeries","resetBySelectTime","isInSelectionZone","calcuSelectionZone","consts","_width","_minSliderTimeSeries","_maxSelectionTimeSeries","_initInnerVar","_setSliderTimeSeries","_initSelectionTimeSeries","_resetSelectionByTime","_xAxisTicks","_aSelectionTimeSeries","_aSelectionPosition","start","end","_startTime","_endTime","_calcuTimePerPoint","aTime","_setSelectionTimeSeries","_resetSelectionByPosition","_setSelectionPosition","isBeforeSliderStartTime","isAfterSliderEndTime","getSliderEndTime","_reset","getSliderStartTimeStr","_formatDate","Date","getSliderEndTimeStr","getFullTimeStr","d","getFullYear","_twoChipers","getMonth","getDate","getHours","getMinutes","getSeconds","n","_selectPosition","_selectTime","setSelectPosition","_timePerPoint","defaultZone","zoneStart","zoneEnd","Math","abs","getXBarPosition","max","space","a","getTimeStr","timeX","quarterSliderTime","tempStartTime","tempEndTime","minHalf","minSliderTimeSeris","gap","tempSelectionEndTime","tempSelectionStartTime","one","tempCenterTime","halfSliderTimeSeries","halfSelectionTimeSeries","aSelectionZone","elZone","aSubGroup","aText","init","aXBarPosition","halfX","text","line","startX","ele","arguments","val","aYBarPosition","AGENT_CONNECT","AGENT_SHUTDOWN","ID_POSTFIX","ID_SPLITER","_oEventData","_addBaseLine","_addEventElements","_resetBaseLineColor","_hasDurationData","_filterShadow","filter","shadow","_oLineElementHash","_baseColor","_aBaseLine","_makeLine","now","_addEventElement","durationStartTimestamp","durationEndTimestamp","_addLine","_getX2","_makeID","x2","lineID","elLineTop","elLineBottom","stroke","data-id","strokeWidth","_hasEventData","aLine","remove","elLine","oPM","split","x1","elBase","el","HANDLER_IMAGE_WIDTH","HANDLER_IMAGE_HEIGHT","callbackStart","callbackDrag","callbackEnd","_previousX","_handleSrc","NORMAL_IMG","_handleDownSrc","_getHandleDownSrc","lastIndex","lastIndexOf","substring","handlerGrip","image","handlerGroup","callback","lastX","stopPropagation","drag","dx","dy","newX","_isInRestirctionZone","easeout","aZone","circle","_addEvents","_oEventGroupElementHash","barLength","gapBarNCircle","circleRadius","bAppend","_makeElement","groupID","elEventGroup","data-time","fill","mouseover","_fireEvent","srcElement","parentNode","getAttribute","elGroupEvent","aGroupElements","lenData","lenElements","lastElement","timestamp","newEl","after","TimeSeriesSignboard","_halfHeight","_elStartTime","text-anchor","_elEndTime","resize","_textMaxWidth","_xPadding","isIn","_isIn","timeText","textAnchor","SIZE","_bRunn","halfSize","elClockwiseBox","elAnitclockwiseBox","_animate","from","to","fnEase"],"mappings":"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","file":"time-slider.min.js","sourcesContent":["(function(w, $) {\n    'use strict';\n    var TimeSlider = function( id, options ) {\n        this.$snap = $(\"#\" + id);\n        this.snap = Snap(\"#\" + id);\n        this._init( options );\n        this._initControlClass();\n        this._addInnerEventListener();\n    };\n    TimeSlider.prototype._init = function( options ) {\n        this.groups = {};\n        this._aListener = {\n            \"inEvent\": [],\n            \"outEvent\": [],\n            \"clickEvent\": [],\n            \"selectTime\": [],\n            \"changeSliderTimeSeries\": [],\n            \"changeSelectionZone\": []\n        };\n        this.opt = {\n            \"duration\": 300,\n            \"xAxisTicks\": 5,\n            \"eventZoneHeight\": 30,        // 하단 이벤트 영역의 height\n            \"headerZoneHeight\": 20,       // 상단 시간 표시영역의 height\n            \"stateLineThickness\": 4,       // 상태선의 두께\n            \"minSliderTimeSeries\": 6000,             // 6sec\n            // \"maxSliderTimeSeries\": 172800000,         // 2day\n            \"maxSelectionTimeSeries\": 172800000,\n            \"headerTextTopPadding\": 10,   // 상단 상태선과 시간 text의 간격\n            \"selectionPointRadius\": 5\n        };\n        this.opt.minSliderTimeSeries = ( this.opt.xAxisTicks + 1 ) * 1000;\n        var p;\n        for( p in options ) {\n            this.opt[p] = options[p];\n        }\n        this.oEventData = new TimeSlider.EventData( this.opt.eventData || [] );\n        this._checkOffset();\n    };\n    TimeSlider.prototype._initControlClass = function( options ) {\n        var self = this;\n\n        this.oPositionManager = new TimeSlider.PositionManager( {\n            \"width\": this.opt.width,\n            \"selectTime\": this.opt.selectTime,\n            \"xAxisTicks\": this.opt.xAxisTicks,\n            \"handleTimeSeries\": this.opt.handleTimeSeries,\n            \"sliderTimeSeries\": this.opt.timeSeries,\n            \"minSliderTimeSeries\": this.opt.minSliderTimeSeries,\n            \"maxSelectionTimeSeries\": this.opt.maxSelectionTimeSeries\n        });\n        var contentZoneHeight = this.opt.height - this.opt.headerZoneHeight - this.opt.eventZoneHeight;\n\n        // this.oTimeSeriesSignboard = new TimeSlider.TimeSeriesSignboard( this, this.getGroup(\"time-series-signboard\", TimeSlider.GROUP_TYPE.CONTENT_BASE, TimeSlider.oDrawOrder[\"time-series-signboard\"]), {\n        //     \"height\": contentZoneHeight,\n        //     \"duration\": this.opt.duration\n        // });\n        this.oLoading = new TimeSlider.LoadingIndicator( this, this.getGroup(\"loading\", TimeSlider.GROUP_TYPE.TOP_BASE, TimeSlider.oDrawOrder[\"loading\"]), {\n            \"width\": this.opt.width,\n            \"height\": this.opt.height,\n            \"duration\": 2000\n        });\n        this.oBackground = new TimeSlider.Background( this, this.getGroup(\"background\", TimeSlider.GROUP_TYPE.CONTENT_BASE, TimeSlider.oDrawOrder[\"background\"]), {\n            \"top\": 0,\n            \"left\": 0,\n            \"width\": this.opt.width,\n            \"height\": contentZoneHeight,\n            \"duration\": this.opt.duration\n        });\n        this.oSelectionManager = new TimeSlider.SelectionManager( this, {\n            \"margin\": this.opt.left,\n            \"height\": this.opt.height,\n            \"duration\": this.opt.duration,\n            \"handleSrc\": this.opt.handleSrc,\n            \"eventZoneHeight\": this.opt.eventZoneHeight,\n            \"headerZoneHeight\": this.opt.headerZoneHeight,\n            \"contentZoneHeight\": contentZoneHeight,\n            \"selectionPointRadius\": this.opt.selectionPointRadius\n        });\n        this.oXAxis = new TimeSlider.XAxis( this, this.getGroup(\"x-axis\", TimeSlider.GROUP_TYPE.TOP_BASE, TimeSlider.oDrawOrder[\"x-axis\"]), {\n            \"endY\": this.opt.height - this.opt.eventZoneHeight,\n            \"width\": this.opt.width,\n            \"textY\": this.opt.headerTextTopPadding,\n            \"startY\": this.opt.headerZoneHeight,\n            \"duration\": this.opt.duration\n        });\n        this.oStateLine = new TimeSlider.StateLine( this, this.getGroup(\"state-line\", TimeSlider.GROUP_TYPE.TOP_BASE, TimeSlider.oDrawOrder[\"state-line\"]), {\n            \"width\": this.opt.width,\n            \"duration\": this.opt.duration,\n            \"topLineY\": this.opt.headerZoneHeight,\n            \"thickness\": this.opt.stateLineThickness,\n            \"timeSeries\": this.opt.timeSeries,\n            \"bottomLineY\": this.opt.height - this.opt.eventZoneHeight\n        } );\n        this.oEvents = new TimeSlider.Events( this, this.getGroup(\"events\", TimeSlider.GROUP_TYPE.BOTTOM_BASE, TimeSlider.oDrawOrder[\"events\"]), {\n            \"duration\": this.opt.duration\n        } );\n\n        this.oLoading.hide();\n    };\n    TimeSlider.prototype.getGroup = function(name, type, zIndex) {\n        if( this.groups[name] ) {\n            return this.groups[name];\n        }\n        var g = this.groups[name] = this.snap.g().attr({\n            \"class\": name,\n            \"data-order\": zIndex\n        });\n        this._setTransform( g, type );\n        this._sortGroup( g, zIndex );\n        return this.groups[name];\n    };\n    TimeSlider.prototype._setTransform = function( newGroup, type ) {\n        switch( type ) {\n            case TimeSlider.GROUP_TYPE.TOP_BASE:\n                break;\n            case TimeSlider.GROUP_TYPE.CONTENT_BASE:\n                newGroup.attr({ transform: \"translate(0, \" + this.opt.headerZoneHeight + \")\" });\n                break;\n            case TimeSlider.GROUP_TYPE.BOTTOM_BASE:\n                newGroup.attr({ transform: \"translate(0, \" + (this.opt.height - this.opt.eventZoneHeight) + \")\" });\n                break;\n        }\n    };\n    TimeSlider.prototype._sortGroup = function( newGroup, zIndex ) {\n        var aGroups = this.snap.selectAll(\"g\");\n        var afterGroup = null;\n        for( var i = aGroups.length - 1; i >= 0 ; i-- ) {\n            if( aGroups[i] == newGroup ) continue;\n            if ( zIndex < parseInt( aGroups[i].attr(\"data-order\") ) ) {\n                afterGroup = aGroups[i];\n            }\n        }\n        if ( afterGroup !== null ) {\n            afterGroup.before( newGroup );\n        }\n    };\n    TimeSlider.prototype._checkOffset = function() {\n        var o = this.$snap.offset();\n        this.opt.top = o.top;\n        this.opt.left = o.left;\n    };\n    TimeSlider.prototype._addInnerEventListener = function() {\n        var self = this;\n        var mousedownX = -1;\n        $(window).on(\"resize\", function() {\n            self._checkOffset();\n            self._resize();\n        });\n        this.snap.mousemove(function(event, x, y) {\n        });\n        this.snap.mouseout(function(event, x, y) {\n        });\n        this.snap.mousedown(function(event, x, y) {\n            mousedownX = x;\n        });\n        this.snap.click(function(event, x, y) {\n            if ( mousedownX !== x ) return;\n            self.oSelectionManager.onMouseClick(event, x - self.opt.left, y - self.opt.top);\n        });\n    };\n    TimeSlider.prototype.fireEvent = function( eventType, argu ) {\n        this._aListener[eventType].forEach(function(fn) {\n            fn( argu );\n        });\n    };\n    TimeSlider.prototype.addEvent = function( eventType, listener ) {\n        this._aListener[eventType].push( listener );\n        return this;\n    };\n    TimeSlider.prototype.addEventData = function( aNewData ) {\n        this.oLoading.show();\n        var aBoundary = this.oEventData.addData( aNewData );\n        this.oEvents.changeData();\n        this.oStateLine.changeData();\n        this.oLoading.hide();\n    };\n    TimeSlider.prototype.reset = function() {\n        // this.oTimeSeriesSignboard.reset();\n        this.oXAxis.reset();\n        this.oSelectionManager.reset();\n        this.oStateLine.reset();\n        this.oEvents.reset();\n    };\n    TimeSlider.prototype._resize = function() {\n        this.oPositionManager.setWidth( this.$snap.width() );\n        this.oBackground.reset();\n        // this.oTimeSeriesSignboard.resize();\n        this.reset();\n    };\n    TimeSlider.prototype.zoomIn = function( zoomLevel ) {\n        // 1/2배씩\n        this.oPositionManager.zoomIn();\n        this.reset();\n    };\n    TimeSlider.prototype.zoomOut = function( zoomLevel ) {\n        // 2배씩\n        this.oPositionManager.zoomOut();\n        this.reset();\n    };\n    TimeSlider.prototype.getSliderTimeSeries = function() {\n        return this.oPositionManager.getSliderTimeSeries();\n    };\n    TimeSlider.prototype.getSelectionTimeSeries = function() {\n        return this.oPositionManager.getSelectionTimeSeries();\n    };\n    TimeSlider.prototype.setDefaultStateLineColor = function( color ) {\n        this.oStateLine.setDefaultStateLineColor( color );\n    };\n    TimeSlider.prototype.emptyData = function() {\n        this.oLoading.show();\n        var aBoundary = this.oEventData.emptyData();\n        this.oEvents.emptyData();\n        this.oStateLine.emptyData();\n        this.oLoading.hide();\n    };\n    TimeSlider.prototype.setSelectTime = function( time ) {\n        this.oSelectionManager.setSelectTime( time );\n    };\n\n    TimeSlider.GROUP_TYPE = {\n        TOP_BASE: \"top-base\",\n        CONTENT_BASE: \"content-base\",\n        BOTTOM_BASE: \"bottom-base\"\n    };\n    TimeSlider.oDrawOrder = {\n        \"background\": 0,\n        \"selection-zone\": 5,\n        \"time-series-signboard\": 7,\n        \"x-axis\": 10,\n        \"events\": 10,\n        \"time-signboard\": 15,\n        \"selection-point\": 15,\n        \"state-line\": 20,\n        \"left-handler\": 25,\n        \"right-handler\": 25,\n        \"guide\": 30,\n        \"loading\": 100\n    };\n    TimeSlider.EventColor = {\n        \"base\": \"rgba(187, 187, 187, .3)\",\n        \"10100\": \"#009E00\",         //Agent connected\n        \"10199\": \"#FAEBD7\",            //Agent ping\n        \"10200\": \"#D15260\",            //Agent shutdown\n        \"10201\": \"#E95C63\",            //Agent unexpected shutdown\n        \"10300\": \"#FF9D7B\",            //Agent connection closed by server\n        \"10301\": \"#F2F089\",            //Agent connection unexpectedly closed by server\n        \"20100\": \"#00F\"             //thread dump\n    };\n    w.TimeSlider = TimeSlider;\n})(window, jQuery);\n","(function(w, $) {\n    var ts = w.TimeSlider;\n    ts.EventData = function( aRawData ) {\n        this._init( aRawData );\n    };\n    ts.EventData.prototype._init = function( aRawData ) {\n        var self = this;\n        this._aRawData = aRawData;\n        this._oHash = {};\n        this._aRawData.forEach(function( o ) {\n            self._oHash[self.makeID(o)] = o;\n        });\n    };\n    ts.EventData.prototype.makeID = function( oEvent ) {\n        return oEvent.eventTypeCode + \"-\" + oEvent.eventTimestamp;\n    };\n    ts.EventData.prototype.count = function() {\n        return this._aRawData.length;\n    };\n    ts.EventData.prototype.getDataByIndex = function( index ) {\n        return this._aRawData[index];\n    };\n    ts.EventData.prototype.getDataByKey = function( key ) {\n        return this._oHash[key];\n    };\n    ts.EventData.prototype.emptyData = function() {\n        this._aRawData = [];\n        this._oHash = {};\n    };\n    ts.EventData.prototype.addData = function( aNewData ) {\n        if ( aNewData.length === 0 ) return;\n\n        var i, j;\n        var beforeBoundary = this._getBeforeDataBoundary( aNewData );\n        for ( i = beforeBoundary ; i >= 0 ; i-- ) {\n            this._aRawData.unshift( aNewData[i] );\n            this._oHash[this.makeID(aNewData[i])] = aNewData[i];\n        }\n\n        var afterBoundary = this._getAfterDataBoundary( aNewData, beforeBoundary );\n        for ( i = afterBoundary ; i < aNewData.length ; i++ ) {\n            this._aRawData.push( aNewData[i] );\n            this._oHash[this.makeID(aNewData[i])] = aNewData[i];\n        }\n\n        beforeBoundary = beforeBoundary === -1 ? 0 : beforeBoundary + 1;\n        afterBoundary = afterBoundary === Number.MAX_SAFE_INTEGER ? aNewData.length - 1 : afterBoundary - 1;\n\n        var skip = beforeBoundary;\n        if ( afterBoundary > beforeBoundary ) {\n            for( i = beforeBoundary ; i < this._aRawData.length ; i++ ) {\n                var rawTimestamp = this._aRawData[i].eventTimestamp;\n                for( j = skip; j < aNewData.length ; j++ ) {\n                    var oNewEventData = aNewData[j];\n                    if ( oNewEventData.eventTimestamp < rawTimestamp ) {\n                        this._aRawData.splice( i, 0, oNewEventData );\n                        this._oHash[this.makeID(oNewEventData)] = oNewEventData;\n                        i++;\n                        skip = j + 1;\n                    } else if ( oNewEventData.eventTimestamp === rawTimestamp ) {\n                        skip = j + 1;\n                        break;\n                    }\n                }\n                if ( skip === aNewData.length ) break;\n            }\n        }\n    };\n    ts.EventData.prototype._getBeforeDataBoundary = function( aNewData ) {\n        var boundary = -1;\n        if ( this._aRawData.length === 0 ) {\n            boundary = aNewData.length - 1;\n        } else {\n            var startTime = this._aRawData[0].eventTimestamp;\n            var len = aNewData.length;\n            for ( var i = 0 ; i < len ; i++ ) {\n                var time = aNewData[i].eventTimestamp;\n                if ( time < startTime ) {\n                    boundary = i;\n                } else {\n                    break;\n                }\n            }\n        }\n        return boundary;\n    };\n    ts.EventData.prototype._getAfterDataBoundary = function( aNewData, skipIndex ) {\n        var boundary = Number.MAX_SAFE_INTEGER;\n        var startIndex = skipIndex + 1;\n        var len = aNewData.length;\n        if ( len > startIndex ) {\n            var endTime = this._aRawData[this._aRawData.length - 1].eventTimestamp;\n            for ( var i = startIndex ; i < len ; i++ ) {\n                var time = aNewData[i].eventTimestamp;\n                if ( time > endTime ) {\n                    boundary = i;\n                    break;\n                }\n            }\n        }\n        return boundary;\n    };\n\n})(window, jQuery);\n","(function(w, $) {\n    var ts = w.TimeSlider;\n    ts.Background = function( timeSlider, svgGroup, options ) {\n        this.timeSlider = timeSlider;\n        this.opt = options;\n        this.group = svgGroup;\n        this._addElements();\n    };\n    ts.Background.prototype._addElements = function() {\n        this.rect = this.timeSlider.snap.rect(this.opt.left, this.opt.top, this.opt.width, this.opt.height);\n        this.group.add(this.rect);\n    };\n    ts.Background.prototype.reset = function() {\n        this.rect.animate({\n            \"width\": this.timeSlider.oPositionManager.getSliderEndPosition()\n        }, this.opt.duration, mina.easein);\n    };\n})(window, jQuery);\n","(function(w, $) {\n    var ts = w.TimeSlider;\n    ts.SelectionManager = function( timeSlider, options ) {\n        this.timeSlider = timeSlider;\n        this.opt = options;\n        this.initClass();\n    };\n    ts.SelectionManager.prototype.initClass = function() {\n        var self = this;\n        var aHandlerPosition = this.timeSlider.oPositionManager.getSelectionPosition();\n        this.oSelectionZone = new TimeSlider.SelectionZone( this.timeSlider, this.timeSlider.getGroup(\"selection-zone\", TimeSlider.GROUP_TYPE.CONTENT_BASE, TimeSlider.oDrawOrder[\"selection-zone\"]), {\n            \"top\": 0,\n            \"left\": aHandlerPosition[0],\n            \"width\": aHandlerPosition[1] - aHandlerPosition[0],\n            \"height\": this.opt.contentZoneHeight,\n            \"duration\": 50//this.opt.duration\n        });\n        this.oSelectionPoint = new TimeSlider.SelectionPoint( this.timeSlider, this.timeSlider.getGroup(\"selection-point\", TimeSlider.GROUP_TYPE.CONTENT_BASE, TimeSlider.oDrawOrder[\"selection-point\"]), {\n            \"y\": this.opt.headerZoneHeight,\n            \"x\": this.timeSlider.oPositionManager.getSelectPosition(),\n            \"radius\": this.opt.selectionPointRadius,\n            \"height\": this.opt.contentZoneHeight,\n            \"duration\": this.opt.duration,\n            \"eventStartY\": this.opt.headerZoneHeight,\n            \"eventEndY\": this.opt.height - this.opt.eventZoneHeight\n        });\n        this.oLeftHandler = new TimeSlider.Handler( this.timeSlider, this.timeSlider.getGroup(\"left-handler\", TimeSlider.GROUP_TYPE.CONTENT_BASE, TimeSlider.oDrawOrder[\"left-handler\"]), {\n            \"x\": aHandlerPosition[0],\n            \"zone\": [0, aHandlerPosition[1]],\n            \"height\": this.opt.contentZoneHeight,\n            \"margin\": this.opt.margin,\n            \"duration\": 50,//this.opt.duration\n            \"handleSrc\": this.opt.handleSrc\n        }, function( x ) {\n            self.oLeftTimeSignboard.onDragStart( x );\n        }, function( x ) {\n            self.oLeftTimeSignboard.onDrag( x );\n        }, function( bIsDraged, x ) {\n            self.oLeftTimeSignboard.onDragEnd();\n            if ( bIsDraged ) {\n                self.moveLeftHandler( x );\n            }\n        });\n        this.oRightHandler = new TimeSlider.Handler( this.timeSlider, this.timeSlider.getGroup(\"right-handler\", TimeSlider.GROUP_TYPE.CONTENT_BASE, TimeSlider.oDrawOrder[\"right-handler\"]), {\n            \"x\": aHandlerPosition[1],\n            \"zone\": [ aHandlerPosition[0], this.timeSlider.oPositionManager.getSliderEndPosition() ],\n            \"height\": this.opt.contentZoneHeight,\n            \"margin\": this.opt.margin,\n            \"duration\": 0,//this.opt.duration\n            \"handleSrc\": this.opt.handleSrc\n        }, function( x ) {\n            self.oRightTimeSignboard.onDragStart( x );\n        }, function( x ) {\n            self.oRightTimeSignboard.onDrag( x );\n        }, function( bIsDraged, x ) {\n            self.oRightTimeSignboard.onDragEnd();\n            if ( bIsDraged ) {\n                self.moveRightHandler( x );\n            }\n        });\n        this.oLeftTimeSignboard = new TimeSlider.TimeSignboard( this.timeSlider, this.timeSlider.getGroup(\"time-left-signboard\", TimeSlider.GROUP_TYPE.CONTENT_BASE, TimeSlider.oDrawOrder[\"time-signboard\"]), {\n            \"x\": aHandlerPosition[0],\n            \"direction\": \"left\"\n        });\n        this.oRightTimeSignboard = new TimeSlider.TimeSignboard( this.timeSlider, this.timeSlider.getGroup(\"time-right-signboard\", TimeSlider.GROUP_TYPE.CONTENT_BASE, TimeSlider.oDrawOrder[\"time-signboard\"]), {\n            \"x\": aHandlerPosition[1],\n            \"direction\": \"right\"\n        });\n    };\n    ts.SelectionManager.prototype.moveLeftHandler = function( x ) {\n        var aCurrentSelectionTimeSeries = this.timeSlider.oPositionManager.getSelectionTimeSeries();\n        var newLeftTime = this.timeSlider.oPositionManager.getTimeFromPosition( x );\n        if ( this.timeSlider.oPositionManager.isInMaxSelectionTimeSeries( newLeftTime, aCurrentSelectionTimeSeries[1] ) ) {\n            this.oRightHandler.setZone( x, this.timeSlider.oPositionManager.getSliderEndPosition() );\n            this.timeSlider.oPositionManager.setSelectionStartPosition( x );\n        } else {\n            var aNewSelectionTimeSeries = this.timeSlider.oPositionManager.getNewSelectionTimeSeriesFromStart( newLeftTime );\n            var newRightX = this.timeSlider.oPositionManager.getPositionFromTime( aNewSelectionTimeSeries[1] );\n            this.oRightHandler.setZone( x, this.timeSlider.oPositionManager.getSliderEndPosition() );\n            this.timeSlider.oPositionManager.setSelectionStartPosition( x );\n            this.oRightHandler.setX( newRightX );\n            this.oRightTimeSignboard.onDrag( newRightX );\n            this.oLeftHandler.setZone( 0, newRightX );\n            this.timeSlider.oPositionManager.setSelectionEndPosition( newRightX );\n\n            if ( this.timeSlider.oPositionManager.isInSelectionZoneSelectPoint() === false ) {\n                this.oSelectionPoint.onMouseClick( newRightX );\n                this.timeSlider.fireEvent( \"selectTime\", aNewSelectionTimeSeries[1] );\n            }\n        }\n        this.oSelectionZone.redraw();\n        this._fireChangeZoneEvent();\n\n    };\n    ts.SelectionManager.prototype.moveRightHandler = function( x ) {\n        var aCurrentSelectionTimeSeries = this.timeSlider.oPositionManager.getSelectionTimeSeries();\n        var newRightTime = this.timeSlider.oPositionManager.getTimeFromPosition( x );\n        if ( this.timeSlider.oPositionManager.isInMaxSelectionTimeSeries( aCurrentSelectionTimeSeries[0], newRightTime ) ) {\n            this.oLeftHandler.setZone( 0, x );\n            this.timeSlider.oPositionManager.setSelectionEndPosition( x );\n        } else {\n            var aNewSelectionTimeSeries = this.timeSlider.oPositionManager.getNewSelectionTimeSeriesFromEnd( newRightTime );\n            var newLeftX = this.timeSlider.oPositionManager.getPositionFromTime( aNewSelectionTimeSeries[0] );\n            this.oLeftHandler.setZone( 0, x );\n            this.timeSlider.oPositionManager.setSelectionEndPosition( x );\n            this.oLeftHandler.setX( newLeftX );\n            this.oLeftTimeSignboard.onDrag( newLeftX );\n            this.oRightHandler.setZone( newLeftX, this.timeSlider.oPositionManager.getSliderEndPosition() );\n            this.timeSlider.oPositionManager.setSelectionStartPosition( newLeftX );\n\n            if ( this.timeSlider.oPositionManager.isInSelectionZoneSelectPoint() === false ) {\n                this.oSelectionPoint.onMouseClick( newLeftX );\n                this.timeSlider.fireEvent( \"selectTime\", aNewSelectionTimeSeries[0] );\n            }\n        }\n        this.oSelectionZone.redraw();\n        this._fireChangeZoneEvent();\n    };\n    ts.SelectionManager.prototype.moveSelectionAndHandler = function( x ) {\n        var aNewSelectionZone = this.timeSlider.oPositionManager.getSelectionPosition();\n        this.oLeftHandler.setPositionAndZone( aNewSelectionZone[0], [0, aNewSelectionZone[1] ] );\n        this.oRightHandler.setPositionAndZone( aNewSelectionZone[1], [ aNewSelectionZone[0], this.timeSlider.oPositionManager.getSliderEndPosition() ] );\n        this.oSelectionZone.redraw();\n        this._fireChangeZoneEvent();\n    };\n    ts.SelectionManager.prototype.onMouseClick = function( event, x, y ) {\n        if ( y > this.opt.headerZoneHeight && y < (this.opt.headerZoneHeight + this.opt.contentZoneHeight ) ) {\n            this._setSelectTime( this.timeSlider.oPositionManager.getTimeFromPosition(x) );\n        }\n    };\n    ts.SelectionManager.prototype._fireChangeZoneEvent = function() {\n        var aNewSelectionZone = this.timeSlider.oPositionManager.getSelectionPosition();\n        this.timeSlider.fireEvent( \"changeSelectionZone\", [ this.timeSlider.oPositionManager.getTimeFromPosition(aNewSelectionZone[0]), this.timeSlider.oPositionManager.getTimeFromPosition(aNewSelectionZone[1]) ] );\n    };\n    ts.SelectionManager.prototype.setSelectTime = function( time ) {\n        var x = this.timeSlider.oPositionManager.getPositionFromTime( time );\n        if ( this.timeSlider.oPositionManager.isInSliderTimeSeries( time ) ) {\n            this._setSelectTime( time );\n        } else {\n            this.timeSlider.oPositionManager.resetBySelectTime( time );\n            this.timeSlider.reset();\n            this.timeSlider.fireEvent( \"selectTime\", time );\n        }\n    };\n    ts.SelectionManager.prototype._setSelectTime = function( time ) {\n        this.timeSlider.oPositionManager.setSelectTime( time );\n        if ( this.timeSlider.oPositionManager.isInSelectionZone( this.timeSlider.oPositionManager.getSelectPosition() ) === false ) {\n            this.timeSlider.oPositionManager.calcuSelectionZone();\n            this.moveSelectionAndHandler();\n        }\n        this.oSelectionPoint.onMouseClick( this.timeSlider.oPositionManager.getSelectPosition() );\n        this.timeSlider.fireEvent( \"selectTime\", time );\n    };\n    ts.SelectionManager.prototype.reset = function() {\n        var aNewSelectionZone = this.timeSlider.oPositionManager.getSelectionPosition();\n        this.oLeftHandler.setPositionAndZone( aNewSelectionZone[0], [0, aNewSelectionZone[1] ] );\n        this.oRightHandler.setPositionAndZone( aNewSelectionZone[1], [ aNewSelectionZone[0], this.timeSlider.oPositionManager.getSliderEndPosition() ] );\n        this.oSelectionZone.redraw();\n        this.oSelectionPoint.onMouseClick( this.timeSlider.oPositionManager.getSelectPosition() );\n    };\n})(window, jQuery);\n","(function(w, $) {\n    var consts = {\n        xAxisTicks: 5\n    };\n    var ts = w.TimeSlider;\n    ts.PositionManager = function( options ) {\n        this._width = options.width;\n        this._minSliderTimeSeries = options.minSliderTimeSeries;\n        this._maxSelectionTimeSeries = options.maxSelectionTimeSeries;\n\n        this._initInnerVar();\n        this._setSliderTimeSeries( options.sliderTimeSeries[0], options.sliderTimeSeries[1] );\n        this._initSelectionTimeSeries( options.handleTimeSeries || [] );\n        this._resetSelectionByTime();\n        this._xAxisTicks = options.xAxisTicks || consts.xAxisTicks;\n        this.setSelectTime( options.selectTime );\n    };\n    ts.PositionManager.prototype._initInnerVar = function() {\n        this._aSelectionTimeSeries = [];\n        this._aSelectionPosition = [];\n    };\n    ts.PositionManager.prototype._setSliderTimeSeries = function( start, end ) {\n        this._startTime = start;\n        this._endTime = end;\n        this._calcuTimePerPoint();\n    };\n    ts.PositionManager.prototype._initSelectionTimeSeries = function( aTime ) {\n        if ( aTime.length != 2 ) {\n            aTime = [ this._startTime, this._endTime ]; // TODO ??\n        }\n        if ( aTime[1] - aTime[0] > this._maxSelectionTimeSeries ) {\n            aTime[0] = aTime[1] - this._maxSelectionTimeSeries;\n        }\n        this._setSelectionTimeSeries( aTime[0], aTime[1] );\n    };\n    ts.PositionManager.prototype._resetSelectionByPosition = function() {\n        this._setSelectionTimeSeries( this.getTimeFromPosition( this._aSelectionPosition[0] ), this.getTimeFromPosition( this._aSelectionPosition[1] ) );\n    };\n    ts.PositionManager.prototype._setSelectionTimeSeries = function( start, end ) {\n        this._aSelectionTimeSeries[0] = start === null ? this._aSelectionTimeSeries[0] : start;\n        this._aSelectionTimeSeries[1] = end === null ? this._aSelectionTimeSeries[1] : end;\n    };\n    ts.PositionManager.prototype._resetSelectionByTime = function() {\n        this._setSelectionPosition( this.getPositionFromTime( this._aSelectionTimeSeries[0] ), this.getPositionFromTime( this._aSelectionTimeSeries[1] ) );\n    };\n    ts.PositionManager.prototype._setSelectionPosition = function( start, end ) {\n        this._aSelectionPosition[0] = start === null ? this._aSelectionPosition[0] : start;\n        this._aSelectionPosition[1] = end === null ? this._aSelectionPosition[1] : end;\n    };\n\n\n    ts.PositionManager.prototype.isInMaxSelectionTimeSeries = function( start, end ) {\n        return ( end - start ) <= this._maxSelectionTimeSeries;\n    };\n    ts.PositionManager.prototype.getNewSelectionTimeSeriesFromStart = function( start ) {\n        return [ start, start + this._maxSelectionTimeSeries ];\n    };\n    ts.PositionManager.prototype.getNewSelectionTimeSeriesFromEnd = function( end ) {\n        return [ end - this._maxSelectionTimeSeries, end ];\n    };\n    ts.PositionManager.prototype.isBeforeSliderStartTime = function( time ) {\n        return time < this._startTime;\n    };\n    ts.PositionManager.prototype.isAfterSliderEndTime = function( time ) {\n        return time > this._endTime;\n    };\n    ts.PositionManager.prototype.getSliderEndTime = function() {\n        return this._endTime;\n    };\n    ts.PositionManager.prototype.setWidth = function( width ) {\n        this._width = width;\n        this._calcuTimePerPoint();\n        this._reset();\n    };\n    ts.PositionManager.prototype.getSliderEndPosition = function() {\n        return this._width;\n    };\n    ts.PositionManager.prototype.getSliderStartTimeStr = function() {\n        return this._formatDate( new Date(this._startTime) );\n    };\n    ts.PositionManager.prototype.getSliderEndTimeStr = function() {\n        return this._formatDate( new Date(this._endTime) );\n    };\n    ts.PositionManager.prototype.getFullTimeStr = function( x ) {\n        return this._formatDate( new Date(this.getTimeFromPosition(x)) );\n    };\n    ts.PositionManager.prototype._formatDate = function( d ) {\n        return d.getFullYear() +\".\" + this._twoChipers( d.getMonth() + 1 ) + \".\" + this._twoChipers( d.getDate() ) + \" \" + this._twoChipers( d.getHours() ) + \":\" + this._twoChipers( d.getMinutes() ) + \":\" + this._twoChipers( d.getSeconds() );\n    };\n    ts.PositionManager.prototype._twoChipers = function( n ) {\n        return n < 10 ? \"0\" + n : n;\n    };\n    ts.PositionManager.prototype.isInSelectionZone = function( x ) {\n        return ( x >= this._aSelectionPosition[0] && x <= this._aSelectionPosition[1] ) ? true : false;\n    };\n    ts.PositionManager.prototype.isInSliderTimeSeries = function( time ) {\n        return ( time >= this._startTime && time <= this._endTime ) ? true : false;\n    };\n    ts.PositionManager.prototype.getSliderTimeSeries = function() {\n        return [ this._startTime, this._endTime ];\n    };\n    ts.PositionManager.prototype.getSelectionTimeSeries = function() {\n        return [ this._aSelectionTimeSeries[0], this._aSelectionTimeSeries[1] ];\n    };\n    ts.PositionManager.prototype.getSelectionPosition = function() {\n        return [ this._aSelectionPosition[0], this._aSelectionPosition[1] ];\n    };\n    ts.PositionManager.prototype.isInSelectionZoneSelectPoint = function() {\n        if ( this._selectPosition >= this._aSelectionPosition[0] && this._selectPosition <= this._aSelectionPosition[1] ) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n    ts.PositionManager.prototype.getSelectPosition = function() {\n        return this._selectPosition;\n    };\n    ts.PositionManager.prototype.setSelectTime = function( time ) {\n        this._selectTime = time;\n        this._selectPosition = this.getPositionFromTime( time );\n    };\n    ts.PositionManager.prototype.setSelectPosition = function( x ) {\n        this._selectPosition = x;\n        this._selectTime = this.getTimeFromPosition( x );\n    };\n    ts.PositionManager.prototype.getTimeFromPosition = function( x ) {\n        return this._startTime + ( this._timePerPoint * x );\n    };\n    ts.PositionManager.prototype.getPositionFromTime = function( time ) {\n        return parseInt( ( time - this._startTime ) / this._timePerPoint );\n    };\n    ts.PositionManager.prototype.calcuSelectionZone = function() {\n        var defaultZone = parseInt((this._aSelectionPosition[1] - this._aSelectionPosition[0]) / 2);\n        var zoneStart = this._selectPosition - defaultZone;\n        var zoneEnd = this._selectPosition + defaultZone;\n        if ( zoneStart < 0 ) {\n            zoneEnd += Math.abs( zoneStart );\n            zoneStart = 0;\n        } else if ( zoneEnd > this._width ) {\n            zoneStart -= ( zoneEnd - this._width );\n            zoneEnd = this._width;\n        }\n        this._setSelectionTimeSeries( this.getTimeFromPosition( zoneStart ), this.getTimeFromPosition( zoneEnd ) );\n        this._setSelectionPosition( zoneStart, zoneEnd );\n    };\n    ts.PositionManager.prototype.getXBarPosition = function() {\n        var self = this;\n        var max = this._xAxisTicks + 1;\n        var space = parseInt( this._width / max );\n        var a = [];\n        for( var i = 0 ; i < max ; i++ ) {\n            if ( i === 0 ) continue;\n            var x = i * space;\n            a.push( {\n                x: x,\n                time: self.getTimeStr( x )\n            });\n        }\n        return a;\n    };\n    ts.PositionManager.prototype.getTimeStr = function( x ) {\n        var timeX = ( x * this._timePerPoint ) + this._startTime;\n        var d = new Date( timeX );\n        return this._twoChipers(d.getMonth() + 1) + \".\" + this._twoChipers(d.getDate()) + \" \" + this._twoChipers( d.getHours() ) + \":\" + this._twoChipers( d.getMinutes() );\n    };\n    ts.PositionManager.prototype.setSelectionStartPosition = function( x ) {\n        this._setSelectionTimeSeries( this.getTimeFromPosition(x), null );\n        this._setSelectionPosition( x, null );\n    };\n    ts.PositionManager.prototype.setSelectionEndPosition = function( x ) {\n        this._setSelectionTimeSeries( null, this.getTimeFromPosition(x) );\n        this._setSelectionPosition( null, x );\n    };\n    ts.PositionManager.prototype.zoomIn = function() {\n        // 선택 영역 중심으로 확대\n        if( this._startTime === this._aSelectionTimeSeries[0] && this._endTime === this._aSelectionTimeSeries[1] ) return;\n        var quarterSliderTime = parseInt( (this._endTime - this._startTime) / 4 );\n        var tempStartTime = this._selectTime - quarterSliderTime;\n        var tempEndTime = this._selectTime + quarterSliderTime;\n\n        if ( tempEndTime - tempStartTime < this._minSliderTimeSeries ) {\n            var minHalf = parseInt( this.minSliderTimeSeris / 2 );\n            tempStartTime = this._selectTime - minHalf;\n            tempEndTime = this._selectTime + minHalf;\n        }\n        var gap;\n        if ( this._aSelectionTimeSeries[0] < tempStartTime ) {\n            gap = tempStartTime - this._aSelectionTimeSeries[0];\n            var tempSelectionEndTime = (this._aSelectionTimeSeries[1] + gap > tempEndTime) ? tempEndTime : this._aSelectionTimeSeries[1] + gap;\n            this._setSelectionTimeSeries( tempStartTime, tempSelectionEndTime );\n        }\n        if ( this._aSelectionTimeSeries[1] > tempEndTime ) {\n            gap = this._aSelectionTimeSeries[1] - tempEndTime;\n            var tempSelectionStartTime = ( this._aSelectionTimeSeries[0] - gap < tempStartTime ) ? tempStartTime : this._aSelectionTimeSeries[0] - gap;\n            this._setSelectionTimeSeries( tempSelectionStartTime, tempEndTime );\n        }\n        this._setSliderTimeSeries( tempStartTime, tempEndTime );\n        this._reset();\n    };\n    ts.PositionManager.prototype.zoomOut = function() {\n        var one = this._endTime - this._startTime;\n        var tempCenterTime = this._aSelectionTimeSeries[0] + parseInt( ( this._aSelectionTimeSeries[1] - this._aSelectionTimeSeries[0] ) / 2 );\n        this._setSliderTimeSeries( tempCenterTime - one, tempCenterTime + one );\n        this._reset();\n    };\n    ts.PositionManager.prototype.resetBySelectTime = function( time ) {\n        time = parseInt( time );\n        var halfSliderTimeSeries = parseInt( ( this._endTime - this._startTime ) / 2 );\n        var halfSelectionTimeSeries = parseInt( ( this._aSelectionTimeSeries[1] - this._aSelectionTimeSeries[0] ) / 2 );\n        this._setSliderTimeSeries( time - halfSliderTimeSeries, time + halfSliderTimeSeries );\n        this._setSelectionTimeSeries( time - halfSelectionTimeSeries, time + halfSelectionTimeSeries );\n        this._resetSelectionByTime();\n        this.setSelectTime( time );\n    };\n    ts.PositionManager.prototype._reset = function() {\n        this.setSelectTime( this._selectTime );\n        this._resetSelectionByTime();\n    };\n    ts.PositionManager.prototype._calcuTimePerPoint = function() {\n        this._timePerPoint = parseInt( ( this._endTime - this._startTime ) / this._width );\n    };\n})(window, jQuery);\n","(function(w, $) {\n    var ts = w.TimeSlider;\n    ts.SelectionZone = function( timeSlider, svgGroup, options ) {\n        this.timeSlider = timeSlider;\n        this.group = svgGroup;\n        this.opt = options;\n        this._addElements();\n    };\n    ts.SelectionZone.prototype._addElements = function() {\n        var aSelectionZone = this.timeSlider.oPositionManager.getSelectionPosition();\n        this.elZone = this.timeSlider.snap.rect(aSelectionZone[0], this.opt.top, aSelectionZone[1] - aSelectionZone[0], this.opt.height);\n        this.group.add(this.elZone);\n    };\n    ts.SelectionZone.prototype.redraw = function() {\n        var aSelectionZone = this.timeSlider.oPositionManager.getSelectionPosition();\n        this.elZone.animate({\n            \"x\": aSelectionZone[0],\n            \"width\": aSelectionZone[1] - aSelectionZone[0]\n        }, this.opt.duration);\n    };\n})(window, jQuery);\n","(function(w, $) {\n    w.TimeSlider.XAxis = function( timeSlider, svgGroup, options ) {\n        this.timeSlider = timeSlider;\n        this.group = svgGroup;\n        this.opt = options;\n        this.aSubGroup = [];\n        this.aText = [];\n        this.init();\n    };\n    w.TimeSlider.XAxis.prototype.init = function() {\n        var aXBarPosition = this.timeSlider.oPositionManager.getXBarPosition();\n        var halfX = this.opt.width / 2;\n        var self = this;\n        for( var i = 0 ; i < aXBarPosition.length ; i++ ) {\n            var g = self.group.g();\n            self.aText.push( self.timeSlider.snap.text(0, self.opt.textY, aXBarPosition[i].time) );\n            g.attr(\"transform\", \"translate(\" + halfX + \", 0)\");\n            g.add(\n                self.aText[i],\n                self.timeSlider.snap.line(0, self.opt.startY, 0, self.opt.endY)\n            );\n            self.group.add( g );\n            self.aSubGroup.push( g );\n            self.setX( i, aXBarPosition[i].x, halfX );\n        }\n    };\n    w.TimeSlider.XAxis.prototype.setX = function( index, x, startX ) {\n        var ele = this.aSubGroup[index];\n        if ( arguments.length === 3 ) {\n            Snap.animate( startX, x, function( val ) {\n                ele.attr(\"transform\", \"translate(\" + val + \", 0)\");\n            }, this.opt.duration);\n        } else {\n            ele.attr(\"transform\", \"translate(\" + x + \", 0)\");\n        }\n    };\n    w.TimeSlider.XAxis.prototype.reset = function() {\n        var self = this;\n        var aYBarPosition = this.timeSlider.oPositionManager.getXBarPosition();\n        var halfX = this.opt.width / 2;\n        for ( var i = 0 ; i < aYBarPosition.length ; i++ ) {\n            self.aSubGroup[i].attr( \"transform\", \"translate(\" + aYBarPosition[i].x + \",0)\");\n            self.aText[i].attr(\"text\", aYBarPosition[i].time );\n        }\n    };\n})(window, jQuery);\n","(function(w, $) {\n    var consts = {\n        AGENT_CONNECT: 10100,\n        AGENT_SHUTDOWN: 10200,\n        ID_POSTFIX: \"+state-line\",\n        ID_SPLITER: \"+\"\n    };\n    var ts = w.TimeSlider;\n    ts.StateLine = function( timeSlider, svgGroup, options ) {\n        this.timeSlider = timeSlider;\n        this.group = svgGroup;\n        this.opt = options;\n        this._oEventData = timeSlider.oEventData;\n\n        this._init();\n        this._addBaseLine();\n        this._addEventElements();\n        this._resetBaseLineColor();\n    };\n    ts.StateLine.prototype._init = function() {\n        this._hasDurationData = false;\n        this._filterShadow = this.timeSlider.snap.filter( Snap.filter.shadow(0, 1, 0.5, \"#000\", 0.2));\n        this._oLineElementHash = {};\n    };\n    ts.StateLine.prototype._addBaseLine = function() {\n        this._baseColor = TimeSlider.EventColor[\"base\"];\n        this._aBaseLine = [ this._makeLine( 0, this.opt.width, this.opt.topLineY, \"base\", \"base-\" + Date.now() ), this._makeLine( 0, this.opt.width, this.opt.bottomLineY, \"base\", \"base-\" + Date.now() ) ];\n        this.group.add( this._aBaseLine[0], this._aBaseLine[1] );\n    };\n    ts.StateLine.prototype._addEventElements = function( ) {\n        var len = this._oEventData.count();\n        for( var i = 0 ; i < len ; i++ ) {\n            this._addEventElement( this._oEventData.getDataByIndex(i) );\n        }\n    };\n    ts.StateLine.prototype._addEventElement = function( oEvent ) {\n        if ( typeof oEvent.durationStartTimestamp !== \"undefined\" ) {\n            if ( this.timeSlider.oPositionManager.isInSliderTimeSeries( oEvent.durationStartTimestamp ) === false && this.timeSlider.oPositionManager.isInSliderTimeSeries( oEvent.durationEndTimestamp ) === false ) return;\n            this._hasDurationData = true;\n            this._addLine(\n                this.timeSlider.oPositionManager.getPositionFromTime( oEvent.durationStartTimestamp ),\n                this._getX2( oEvent ),\n                oEvent\n            );\n        }\n    };\n    ts.StateLine.prototype._makeID = function( oEvent ) {\n        return this._oEventData.makeID( oEvent ) + consts.ID_POSTFIX;\n    };\n    ts.StateLine.prototype._addLine = function( x, x2, oEvent ) {\n        var lineID = this._makeID( oEvent );\n        var elLineTop = this._makeLine( x, x2, this.opt.topLineY, oEvent.eventTypeCode, lineID );\n        var elLineBottom = this._makeLine( x, x2, this.opt.bottomLineY, oEvent.eventTypeCode, lineID );\n        this._oLineElementHash[lineID] = [ elLineTop, elLineBottom ];\n        this.group.add( elLineTop, elLineBottom );\n    };\n    ts.StateLine.prototype._makeLine = function( x, x2, y, eventType, id ) {\n        return  this.timeSlider.snap.line( x, y, x2, y ).attr({\n            //\"filter\": this._filterShadow,\n            \"stroke\": TimeSlider.EventColor[eventType],\n            \"data-id\": id,\n            \"strokeWidth\": this.opt.thickness\n        });\n    };\n    ts.StateLine.prototype._hasEventData = function( id ) {\n        return typeof this._oLineElementHash[id] === \"undefined\" ? false : true;\n    };\n    ts.StateLine.prototype._getX2 = function( oEvent ) {\n        return this.timeSlider.oPositionManager.getPositionFromTime( oEvent.durationEndTimestamp == -1 ? this.timeSlider.oPositionManager.getSliderEndTime() : oEvent.durationEndTimestamp );\n    };\n    ts.StateLine.prototype.changeData = function() {\n        var len = this._oEventData.count();\n        for( var i = 0 ; i < len ; i++ ) {\n            var oEvent = this._oEventData.getDataByIndex(i);\n            if ( this._hasEventData( this._makeID( oEvent ) ) === false ) {\n                this._addEventElement( oEvent );\n            }\n        }\n        this.reset();\n    };\n    ts.StateLine.prototype.emptyData = function() {\n        for( var p in this._oLineElementHash ) {\n            var aLine = this._oLineElementHash[p];\n            aLine[0].remove();\n            aLine[1].remove();\n        }\n        this._oLineElementHash = {};\n    };\n    ts.StateLine.prototype.setDefaultStateLineColor = function( color ) {\n        this._baseColor = color;\n        if ( this._hasDurationData === true ) return;\n        this._aBaseLine.forEach(function( elLine ) {\n            elLine.attr(\"stroke\", color);\n        });\n    };\n    ts.StateLine.prototype._resetBaseLineColor = function() {\n        var self = this;\n        this._aBaseLine.forEach(function( elLine ) {\n            elLine.attr(\"stroke\", self._hasDurationData === true ? TimeSlider.EventColor[\"base\"] : self._baseColor );\n        });\n    };\n    ts.StateLine.prototype.reset = function() {\n        var self = this;\n        var oPM = this.timeSlider.oPositionManager;\n        for( var p in this._oLineElementHash ) {\n            var aLine = this._oLineElementHash[p];\n            var oEvent = this._oEventData.getDataByKey(p.split(consts.ID_SPLITER)[0]);\n            if ( oPM.isInSliderTimeSeries( oEvent.durationStartTimestamp ) || oPM.isInSliderTimeSeries( oEvent.durationEndTimestamp ) ) {\n                aLine.forEach(function( elLine ) {\n                    self.show( elLine );\n                    elLine.animate({\n                        \"x1\": oPM.getPositionFromTime( oEvent.durationStartTimestamp ),\n                        \"x2\": self._getX2( oEvent )\n                    }, self.opt.duration);\n                });\n            } else {\n                aLine.forEach(function( elLine ) {\n                    self.hide( elLine );\n                });\n            }\n        }\n        this._aBaseLine.forEach(function( elBase ) {\n            elBase.animate({\n                \"x2\": oPM.getSliderEndPosition()\n            }, self.opt.duration);\n        });\n        this._resetBaseLineColor();\n    };\n    ts.StateLine.prototype.show = function( el ) {\n        el.attr(\"display\", \"block\");\n    };\n    ts.StateLine.prototype.hide = function( el ) {\n        el.attr(\"display\", \"none\");\n    };\n})(window, jQuery);\n","(function(w, $) {\n    var consts = {\n        HANDLER_IMAGE_WIDTH: 30,\n        HANDLER_IMAGE_HEIGHT: 18\n    };\n    var ts = w.TimeSlider;\n    ts.Handler = function( timeSlider, svgGroup, options, callbackStart, callbackDrag, callbackEnd ) {\n        this.timeSlider = timeSlider;\n        this.group = svgGroup;\n        this.opt = options;\n        this._previousX = options.x;\n        this._handleSrc = options.handleSrc || consts.NORMAL_IMG;\n        this._handleDownSrc = this._getHandleDownSrc();\n        this.callbackStart = callbackStart;\n        this.callbackDrag = callbackDrag;\n        this.callbackEnd = callbackEnd;\n        this._addElements();\n        this.setX( options.x );\n        this.addEvent();\n    };\n    ts.Handler.prototype._getHandleDownSrc = function() {\n        var lastIndex = this._handleSrc.lastIndexOf( \".\" );\n        return this._handleSrc.substring( 0 , lastIndex ) + \"_down\" + this._handleSrc.substring( lastIndex );\n    };\n    ts.Handler.prototype._addElements = function() {\n        this.handlerGrip = this.timeSlider.snap.image( this._handleSrc, -(consts.HANDLER_IMAGE_WIDTH / 2), -(consts.HANDLER_IMAGE_HEIGHT / 2), consts.HANDLER_IMAGE_WIDTH, consts.HANDLER_IMAGE_HEIGHT );\n        this.handlerGroup = this.group.g();\n        this.handlerGroup.add(\n            this.timeSlider.snap.line( 0, 0, 0, this.opt.height ),\n            this.handlerGrip\n        );\n    };\n    ts.Handler.prototype.addEvent = function( callback ) {\n        var self = this;\n        var lastX = -1;\n        // onmove, onstart, onend\n        this.handlerGrip.mousedown(function(event, x, y) {\n            event.stopPropagation();\n        });\n        this.handlerGrip.click(function(event, x, y) {\n            event.stopPropagation();\n        });\n        this.handlerGrip.drag(function(dx, dy, x, y, event) {\n            var newX = x - self.opt.margin;\n            if ( self._isInRestirctionZone( newX ) === false ) return;\n            self.handlerGroup.attr({ transform: \"translate(\" + newX + \", 0)\" });\n            lastX = newX;\n            self.callbackDrag( newX );\n        }, function(x, y, event) {\n            event.stopPropagation();\n            self.handlerGrip.attr( \"href\", self._handleDownSrc );\n            self.callbackStart( x - self.opt.margin );\n        }, function(event) {\n            event.stopPropagation();\n            self.handlerGrip.attr( \"href\", self._handleSrc );\n            if ( self._previousX !== lastX && lastX !== -1 ) {\n                self.callbackEnd( true, lastX );\n                self._previousX = lastX;\n            } else {\n                self.callbackEnd( false );\n            }\n        });\n    };\n    ts.Handler.prototype.setX = function( x ) {\n        this.handlerGroup.animate({\n            \"transform\": \"translate(\" + x + \", 0)\"\n        }, this.opt.duration, mina.easeout);\n    };\n    ts.Handler.prototype._isInRestirctionZone = function( x ) {\n        return ( x <= this.opt.zone[0] || x >= this.opt.zone[1] ) ? false : true;\n    };\n    ts.Handler.prototype.setZone = function( start, end ) {\n        this.opt.zone = [start, end];\n    };\n    ts.Handler.prototype.setPositionAndZone = function( x, aZone ) {\n        this.setX( x );\n        this.callbackDrag( x );\n        this.setZone( aZone[0], aZone[1] );\n    };\n\n})(window, jQuery);\n","(function(w, $) {\n    var ts = w.TimeSlider;\n    ts.SelectionPoint = function( timeSlider, svgGroup, options ) {\n        this.timeSlider = timeSlider;\n        this.group = svgGroup;\n        this.opt = options;\n        this._addElements();\n        this.onMouseClick( options.x );\n    };\n    ts.SelectionPoint.prototype._addElements = function() {\n        this.group.add(\n            this.timeSlider.snap.line( 0, 0, 0, this.opt.height ),\n            this.timeSlider.snap.circle( 0, this.opt.height / 2, this.opt.radius ).attr({\n                filter: this.timeSlider.snap.filter( Snap.filter.shadow(0, 0, 2, \"#000\", 0.3))\n            })\n        );\n    };\n    ts.SelectionPoint.prototype.onMouseClick = function( x ) {\n        this.group.animate({\n            \"transform\": \"translate(\" + x +\", \" + this.opt.y + \")\"\n        }, this.opt.duration, mina.easein);\n    };\n})(window, jQuery);\n","(function(w, $) {\n    var consts = {\n        ID_POSTFIX: \"+event-circle\",\n        ID_SPLITER: \"+\"\n    };\n    var ts = w.TimeSlider;\n    ts.Events = function( timeSlider, svgGroup, options ) {\n        this.timeSlider = timeSlider;\n        this.group = svgGroup;\n        this._oEventData = timeSlider.oEventData;\n\n        this._init(options);\n        this._addEventElements();\n        this._addEvents();\n    };\n    ts.Events.prototype._init = function( options ) {\n        this._oEventGroupElementHash = {};\n        this.opt = {\n            \"y\": 4,\n            \"barLength\": 4,\n            \"gapBarNCircle\": 2,\n            \"circleRadius\": 8\n        };\n        for( var p in options ) {\n            this.opt[p] = options[p];\n        }\n        this._filterShadow = this.timeSlider.snap.filter( Snap.filter.shadow(1, 1, 1, \"#000\", 0.3));\n    };\n    ts.Events.prototype._addEventElements = function() {\n        var len = this._oEventData.count();\n        for ( var i = 0 ; i < len ; i++ ) {\n            this._addEventElement( this._oEventData.getDataByIndex(i), true );\n        }\n    };\n    ts.Events.prototype._addEventElement = function( oEvent, bAppend ) {\n        var el = this._makeElement( oEvent );\n        this.group[bAppend ? \"append\": \"prepend\"]( el );\n        if ( this.timeSlider.oPositionManager.isInSliderTimeSeries( oEvent.eventTimestamp ) === false ) {\n            this.hide( el );\n        }\n        return el;\n    };\n    ts.Events.prototype._makeID = function( oEvent ) {\n        return this._oEventData.makeID( oEvent ) + consts.ID_POSTFIX;\n    };\n    ts.Events.prototype._makeElement = function( oEvent ) {\n        var opt = this.opt;\n        var time = oEvent.eventTimestamp;\n        var groupID = this._makeID( oEvent );\n        var elEventGroup = this.group.g().attr({\n            \"data-id\": groupID,\n            \"data-time\": time,\n            \"transform\": \"translate(\" + this.timeSlider.oPositionManager.getPositionFromTime( time ) + \",0)\"\n        }).add(\n            this.timeSlider.snap.line( 0, opt.y, 0, opt.y + opt.barLength ),\n            this.timeSlider.snap.circle( 0, opt.y + opt.circleRadius + opt.gapBarNCircle + opt.barLength, opt.circleRadius ).attr({\n                \"fill\": TimeSlider.EventColor[oEvent.eventTypeCode],\n                \"class\": \"event\",\n                \"filter\": this._filterShadow,\n                \"data-time\": time\n            })\n        );\n        this._oEventGroupElementHash[groupID] = elEventGroup;\n        return elEventGroup;\n    };\n    ts.Events.prototype._addEvents = function() {\n        var self = this;\n        this.group.mouseover(function(event, x, y) {\n            self._fireEvent( \"inEvent\", event, x, y );\n        });\n        this.group.mouseout(function(event, x, y) {\n            self._fireEvent( \"outEvent\", event, x, y );\n        });\n        this.group.click(function(event, x, y) {\n            self._fireEvent( \"clickEvent\", event, x, y );\n        });\n    };\n    ts.Events.prototype._fireEvent = function( eventType, event, x, y ) {\n        this.timeSlider.fireEvent(eventType, [x, y, this._oEventData.getDataByKey( event.srcElement.parentNode.getAttribute(\"data-id\").split(consts.ID_SPLITER)[0] )] );\n    };\n    ts.Events.prototype.reset = function() {\n        var self = this;\n        for ( var p in this._oEventGroupElementHash ) {\n            var elGroupEvent = this._oEventGroupElementHash[p];\n            var time = this._oEventData.getDataByKey(p.split(consts.ID_SPLITER)[0]).eventTimestamp;\n\n            if ( self.timeSlider.oPositionManager.isInSliderTimeSeries( time ) ) {\n                self.show( elGroupEvent );\n                (function( el, x ) {\n                    el.animate({\n                        \"transform\": \"translate(\" + x + \",0)\"\n                    }, self.opt.duration);\n                })(elGroupEvent, this.timeSlider.oPositionManager.getPositionFromTime( time ));\n            } else {\n                (function( el, x ) {\n                    el.animate({\n                        \"transform\": \"translate(\" + x + \",0)\"\n                    }, self.opt.duration, function() {\n                        self.hide( el );\n                    });\n                })(elGroupEvent, self.timeSlider.oPositionManager.isBeforeSliderStartTime( time ) ? 0 : self.timeSlider.oPositionManager.getSliderEndPosition() );\n            }\n        }\n    };\n    ts.Events.prototype.changeData = function() {\n        var aGroupElements = this.group.selectAll(\"g\");\n        if ( aGroupElements.length === 0 ) {\n            this._addEventElements();\n            return;\n        }\n        var i, j, oEvent, skip = 0, lenData = this._oEventData.count(), lenElements = aGroupElements.length;\n        var lastElement = aGroupElements[lenElements - 1];\n\n        for( i = 0 ; i < lenElements ; i++ ) {\n            var el = aGroupElements[i];\n            var timestamp = parseInt( el.attr(\"data-time\") );\n\n            for( j = skip ; j < lenData ; j++ ) {\n                oEvent = this._oEventData.getDataByIndex(j);\n                if ( oEvent.eventTimestamp < timestamp ) {\n                    el.before( this._makeElement( oEvent ) );\n                    skip = j;\n                } else if ( oEvent.eventTimestamp === timestamp ) {\n                    skip = j + 1;\n                    lastElement = el;\n                    break;\n                } else {\n                    skip = j;\n                    lastElement = el;\n                    break;\n                }\n            }\n        }\n        for( skip ; skip < lenData ; skip++ ) {\n            oEvent = this._oEventData.getDataByIndex(skip);\n            var newEl = this._makeElement( oEvent );\n            lastElement.after( newEl );\n            lastElement = newEl;\n        }\n        this.reset();\n    };\n    ts.Events.prototype.emptyData = function() {\n        for ( var p in this._oEventGroupElementHash ) {\n            this._oEventGroupElementHash[p].remove();\n        }\n        this._oEventGroupElementHash = {};\n    };\n    ts.Events.prototype.show = function( el ) {\n        el.attr(\"display\", \"block\");\n    };\n    ts.Events.prototype.hide = function( el ) {\n        el.attr(\"display\", \"none\");\n    };\n\n})(window, jQuery);\n","(function(w, $) {\n    var ts = w.TimeSlider;\n    ts.TimeSeriesSignboard = function( timeSlider, svgGroup, options ) {\n        this.timeSlider = timeSlider;\n        this.group = svgGroup;\n        this.opt = options;\n        this._init();\n        this._addElements();\n    };\n    ts.TimeSeriesSignboard.prototype._init = function() {\n        this._halfHeight = this.opt.height - 12;\n    };\n    ts.TimeSeriesSignboard.prototype._addElements = function() {\n        this._elStartTime = this.group.text(0, this._halfHeight, this.timeSlider.oPositionManager.getSliderStartTimeStr() ).attr({\n            \"text-anchor\": \"start\"\n        });\n        this._elEndTime = this.group.text(this.timeSlider.oPositionManager.getSliderEndPosition(), this._halfHeight, this.timeSlider.oPositionManager.getSliderEndTimeStr() ).attr({\n            \"text-anchor\": \"end\"\n        });\n        this.group.add( this._elStartTime, this._elEndTime );\n    };\n    ts.TimeSeriesSignboard.prototype.reset = function() {\n        this._elStartTime.attr(\"text\", this.timeSlider.oPositionManager.getSliderStartTimeStr() );\n        this._elEndTime.attr(\"text\", this.timeSlider.oPositionManager.getSliderEndTimeStr() );\n    };\n    ts.TimeSeriesSignboard.prototype.resize = function() {\n        var self = this;\n        this._elEndTime.animate({\n            \"x\": self.timeSlider.oPositionManager.getSliderEndPosition()\n        }, this.opt.duration, function() {\n            self._elEndTime.attr(\"text\", self.timeSlider.oPositionManager.getSliderEndTimeStr() );\n        });\n    };\n})(window, jQuery);\n","(function(w, $) {\n    var ts = w.TimeSlider;\n    ts.TimeSignboard = function( timeSlider, svgGroup, options ) {\n        this.timeSlider = timeSlider;\n        this.group = svgGroup;\n        this.opt = options;\n        this._textMaxWidth = 100;\n        this._xPadding = 2;\n        this._addElements();\n    };\n    ts.TimeSignboard.prototype._addElements = function() {\n        var isIn = this._isIn( this.opt.x );\n        var x = this.opt.x + ( isIn ? this._xPadding : -this._xPadding );\n        this.timeText = this.group.text(x, 26, this.timeSlider.oPositionManager.getFullTimeStr(this.opt.x) ).attr({\n            \"textAnchor\": isIn ? \"start\" : \"end\"\n        });\n        this.group.add( this.timeText );\n    };\n    ts.TimeSignboard.prototype.setX = function( x ) {\n        var isIn = this._isIn( x );\n        this.timeText.attr({\n            \"x\": x + ( isIn ? this._xPadding : -this._xPadding ),\n            \"text\": this.timeSlider.oPositionManager.getFullTimeStr(x),\n            \"textAnchor\": isIn ? \"start\" : \"end\"\n        });\n\n    };\n    ts.TimeSignboard.prototype._isIn = function( x ) {\n        if ( this.opt.direction == \"left\" ) {\n            return x < this._textMaxWidth;\n        } else {\n            return x + this._textMaxWidth < this.timeSlider.oPositionManager.getSliderEndPosition();\n        }\n    };\n    ts.TimeSignboard.prototype.onDragStart = function( x ) {\n        this.setX( x );\n    };\n    ts.TimeSignboard.prototype.onDragEnd = function() {\n    };\n    ts.TimeSignboard.prototype.onDrag = function( x ) {\n        this.setX( x );\n    };\n})(window, jQuery);\n","(function(w, $) {\n    var consts = {\n        SIZE: 30\n    };\n    var ts = w.TimeSlider;\n    ts.LoadingIndicator = function( timeSlider, svgGroup, options ) {\n        this.timeSlider = timeSlider;\n        this.opt = options;\n        this.group = svgGroup;\n        this._bRunn = false;\n        this._addElements();\n        this.show();\n    };\n    ts.LoadingIndicator.prototype._addElements = function() {\n        var size = 30;\n        var halfSize = consts.SIZE / 2;\n        var x = this.opt.width / 2 - halfSize;\n        var y = this.opt.height / 2 - halfSize;\n        this.group.add( this.timeSlider.snap.rect(0, 0, this.opt.width, this.opt.height) );\n        this.elClockwiseBox = this.timeSlider.snap.rect(x, y, consts.SIZE, consts.SIZE).attr({\n            \"stroke\": \"rgba(197, 197, 197, .9)\"\n        });\n        this.elAnitclockwiseBox = this.timeSlider.snap.rect(x, y, consts.SIZE, consts.SIZE).attr({\n            \"stroke\": \"rgba(239, 246, 105, .9)\"\n        });\n        this.group.add( this.elClockwiseBox, this.elAnitclockwiseBox );\n    };\n    ts.LoadingIndicator.prototype.show = function() {\n        this.group.attr(\"display\", \"block\");\n        this._bRunn = true;\n        this._animate( this.elClockwiseBox, 0, 360, mina.easeout );\n        this._animate( this.elAnitclockwiseBox, 45, -315, mina.easein );\n    };\n    ts.LoadingIndicator.prototype._animate = function( ele, from, to, fnEase ) {\n        var self = this;\n        Snap.animate( from, to, function(val) {\n            ele.attr(\"transform\", \"rotate(\" + val + \"deg)\");\n        }, self.opt.duration, fnEase, function() {\n            if ( self._bRunn === true ) {\n                self._animate( ele, to, from, fnEase );\n            }\n        });\n    };\n    ts.LoadingIndicator.prototype.hide = function() {\n        this.group.attr(\"display\", \"none\");\n        this._bRunn = false;\n    };\n})(window, jQuery);\n"],"sourceRoot":"/source/"}